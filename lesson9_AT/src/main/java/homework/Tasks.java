package homework;

public class Tasks {

    void task1() {
        /*
        Согласно документации Swagger, напишите тест на этот эндпоинт https://petstore.swagger.io/#/pet/addPet для POST метода.

        Тест должен быть оформлен с использованием подхода Object comparable, в тело запроса поступаем сериализованная модель данных в виде класса.
        Из тела ответа вам надо десериализовать json ответ обратно в класс.

        Тест должен проверять, что статус код 200, concept-type JSON и все данные, которые содержались в теле запроса, совпадают с данными в теле ответа, за исключением id.

         */
    }

    void task2() {
        /*
        Создайте тест, который делает GET запрос по эндпоинту https://reqres.in/api/users?page=2

        Тест должен быть оформлен с использованием подхода Object comparable, из тела ответа вам надо десериализовать json ответ обратно в класс.
        Перед этим вам надо создать класс, который будет подходить по структуре к ответу в JSON.

        Тест должен проверять, что статус код 200 и concept-type JSON.

        Вам надо получить всех юзеров из поля data, затем с помощью Stream API сделать маппинг полей email.
        В этом же стриме оставить только те email, который содержат @ (сделать это можно через промежуточный метод filter).
        В конце вам надо привести этот стрим в коллекцию строк, которая будет содержать только email адреса с @.

        Вторая ваша проверка должна сравнивать размер коллекции email из стрима с размером коллекции поля data.
        Тем самым мы поймём, что у каждого юзера в коллекции data есть email с @.
         */
    }


    void task3() {
        /*
        Создайте тест, который делает GET запрос по эндпоинту https://reqres.in/api/login
        Подробное описание есть в сваггере (https://petstore.swagger.io/#/user/loginUser)
        У этого запроса должно быть 2 обязательных параметра username и password

        Вам надо сделать проверку если параметра username нет, но параметр password есть, то будет статус код 400.
        То же самое надо сделать для параметра password, но уже наоборот. Параметр username есть, а password нет.

        Отправлять 2 запроса в одном тестовом методе запрещено, подумайте как записать решения с использованием датапровайдера.

        Сваггер не является чётким требованиям к тому как должны работать REST контракты приложения. В нём тоже могут быть ошибки!
         */
    }
}